//
//  SearchViewController.swift
//  CoBook
//
//  Created protas on 6/5/20.
//  Copyright © 2020 CoBook. All rights reserved.
//
//  Template generated by Edward
//

import UIKit
import PanModal

class SearchViewController: BaseViewController {

    @IBOutlet var tableView: UITableView!
    @IBOutlet var activityIndicator: UIActivityIndicatorView!

    var presenter: SearchPresenter
    var searchController: UISearchController!
    var searchBar: UISearchBar!

    var isSearching: Bool {
        return searchController.isActive
    }

    // MARK: - Initializers

	init(presenter: SearchPresenter) {
        self.presenter = presenter
        super.init(nibName: "SearchViewController", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: - Life Cycle

	override func viewDidLoad() {
        super.viewDidLoad()
        setupLayout()

        presenter.view = self
        presenter.setup()
    }

    deinit {
        presenter.view = nil
    }

    // MARK: Loader view

    override func startLoading() {
        activityIndicator.startAnimating()
    }

    override func stopLoading() {
        activityIndicator.stopAnimating()
    }

    // MARK: Actions

    @objc func closeAction() {
        self.dismiss(animated: true, completion: nil)
    }


}

// MARK: - Privates

private extension SearchViewController {

    func setupLayout() {
        self.navigationItem.title = "Пошук виду діяльності"
        self.navigationItem.rightBarButtonItem = UIBarButtonItem(image: #imageLiteral(resourceName: "ic_nav_close"), style: .plain, target: self, action: #selector(closeAction))

        self.searchController = UISearchController(searchResultsController: nil)
        searchController.searchResultsUpdater = self
        searchController.delegate = self
        searchController.hidesNavigationBarDuringPresentation = false
        searchController.dimsBackgroundDuringPresentation = false

        // Search bar setup
        searchBar = searchController.searchBar
        searchBar.sizeToFit()
        searchBar.searchBarStyle = .default
        searchBar.barTintColor = UIColor.Theme.grayBG
        searchBar.tintColor = UIColor.Theme.blackMiddle
        searchBar.setImage(UIImage(named: "ic_search"), for: .search, state: .normal)
        searchBar.placeholder = "Пошук"
        searchBar.autocapitalizationType = .none
        searchBar.showsCancelButton = false

        self.navigationItem.searchController = searchController
    }


}

// MARK: - SearchView

extension SearchViewController: SearchView {

    func reload() {
        tableView.reloadData()
    }

    func set(dataSource: DataSource<SearchCellsConfigurator>?) {
        dataSource?.connect(to: tableView)
    }

    
}

// MARK: - UISearchControllerDelegate

extension SearchViewController: UISearchControllerDelegate {

    func willPresentSearchController(_ searchController: UISearchController) {
        searchBar.setShowsCancelButton(true, animated: true)
        self.navigationItem.rightBarButtonItem = nil
    }

    func willDismissSearchController(_ searchController: UISearchController) {
        searchBar.setShowsCancelButton(false, animated: true)
    }


}

// MARK: - UISearchResultsUpdating

extension SearchViewController: UISearchResultsUpdating {

    func updateSearchResults(for searchController: UISearchController) {
        let strippedString = searchController.searchBar.text!.trimmingCharacters(in: .whitespaces)
        presenter.searchBy(text: strippedString)
    }


}

